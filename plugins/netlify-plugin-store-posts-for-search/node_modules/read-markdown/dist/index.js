'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var readMarkdown = function () {
	var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(path, options) {
		var paths, promises, contents, parsed, obj;
		return _regenerator2.default.wrap(function _callee$(_context) {
			while (1) {
				switch (_context.prev = _context.next) {
					case 0:
						options = (0, _extends3.default)({
							results: 'object',
							html: true
						}, options);
						_context.next = 3;
						return (0, _globby2.default)(path);

					case 3:
						paths = _context.sent;
						promises = paths.map(function (path) {
							return (0, _fsExtra.readFile)(path, 'utf8');
						});
						_context.next = 7;
						return Promise.all(promises);

					case 7:
						contents = _context.sent;
						parsed = contents.map(function (str) {
							var data = (0, _grayMatter2.default)(str);
							if (options.html && data.content) {
								data.content = toHTML(data.content);
							}
							return data;
						});

						if (!(options.results === 'array')) {
							_context.next = 11;
							break;
						}

						return _context.abrupt('return', parsed);

					case 11:
						obj = {};

						paths.forEach(function (path, key) {
							obj[path] = parsed[key];
						});
						return _context.abrupt('return', obj);

					case 14:
					case 'end':
						return _context.stop();
				}
			}
		}, _callee, this);
	}));

	return function readMarkdown(_x, _x2) {
		return _ref.apply(this, arguments);
	};
}();

var _fsExtra = require('fs-extra');

var _grayMatter = require('gray-matter');

var _grayMatter2 = _interopRequireDefault(_grayMatter);

var _globby = require('globby');

var _globby2 = _interopRequireDefault(_globby);

var _markdown = require('markdown');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var toHTML = _markdown.markdown.toHTML;
exports.default = readMarkdown;
//# sourceMappingURL=index.js.map